{"name":"node-debugger","main":"./lib/node-debugger","version":"1.3.2","description":"Debugger For Nodejs","repository":{"type":"git","url":"git+https://github.com/kiddkai/atom-node-debugger.git"},"license":"MIT","engines":{"atom":">0.200.0"},"dependencies":{"atom-space-pen-views":"^2.0.5","bluebird":"^2.9.25","bunyan":"^1.3.5","emissary":"^1.3.0","event-stream":"^3.3.1","geval":"^2.1.1","mercury":"^14.0.0","ramda":"^0.14.0","split":"^0.3.0","through2":"^0.6.1","tree-kill":"^0.1.1","which":"^1.0.5","xtend":"^4.0.0"},"devDependencies":{"from":"^0.1.3"},"readme":"node-debugger package\n==============================\n\n> A simple Node.js/io.js debugger for daily use.\n\n## Usage\n\nOpen a javascript (.js) file and execute the start-resume command (F5) to launch the debugger.\n\nDebug panels will show up as shown in the image below.\n\n![Screenshot of node-debugger in action](https://raw.githubusercontent.com/kiddkai/atom-node-debugger/master/screenshot.jpg)\n\nThe '>' symbol in the gutter marks the current line of execution.\n\nExecute the toggle-breakpoint (F9) command to set a breakpoint. The breakpoint will be displayed in the gutter using a red marker.\n\nExecute start-resume (F5) again to resume debugging or use the step-next (F10), step-in (F11) or step-out (shift-F11) commands.\n\n## Commands\n\nYou may access the commands using CMD/Ctrl+p or by using the shortcut key specified within the brackets.\n\n```js\n'node-debugger:start-resume' (F5)\n'node-debugger:debug-active-file' (ctrl-F5)\n'node-debugger:stop' (shift-F5)\n'node-debugger:toggle-breakpoint' (F9)\n'node-debugger:step-next' (F10)\n'node-debugger:step-in' (F11)\n'node-debugger:step-out' (shift-F11)\n```\n\n## Configuration\n\nThe following attributes can be set to control the node-debugger.\n\n* nodePath - path to node.js executable\n* nodeArgs - arguments sent to node.js during launch\n* appArgs - arguments sent to the application during launch\n* debugPort - the port used to communicate to the launched process\n* env - the process environment variables (if left empty the environment will be inherited)\n* scriptMain - the preferred startup file.\n\nAn example of a configuration is given below.\n```CoffeeScript\n\"node-debugger\":\n  nodePath: \"C:/program/nodejs/node.exe\"\n  nodeArgs: \"--use-strict --use_inlining\"\n  appArgs: \"--arg1=10 --arg2\"\n  debugPort: 5860\n  env: \"key1=value1;key2=value2;key3=value3\"  \n  scriptMain: \"c:/myproject/main.js\"\n```\n\n## Debugging projects in atom\nWhen executing the start-resume command the node-debugger will try to figure out\nwhich file that is the main file of the current atom project.\nThis is the strategy being used:\n\n1. use configured entry point (scriptMain)\n1. attempt to read entry point from package.json in the project root folder\n1. attempt to start currently open file (ctrl+F5 hot-key)\n1. cannot start debugger\n\n## Troubleshooting\n\nCheck in the node-debugger package settings that the node path is set correctly.\n\n## Feedback\n\nPlease click [here](https://github.com/kiddkai/atom-node-debugger/issues/new)\nto provide me more suggestions to improve this debugger, thanks :D\n\n## Todo\n\n```js\nCoffeeScript support\nError Handling\n```\n\n## Known issues\n\nIn `Node.js>=0.12` and `io.js`. The process doesn't stop when your process finished.\nSo it will have no response from debugger server and will not keep going debugging.\nWhen you face that issue, just use the `x` button to stop the process by yourself.\n\nIssue report is here: https://github.com/nodejs/io.js/issues/1788\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/kiddkai/atom-node-debugger/issues"},"homepage":"https://github.com/kiddkai/atom-node-debugger#readme","_id":"node-debugger@1.3.2","_shasum":"96f825633b13175c532e36a4bac4e6dadf88185f","_resolved":"file:../d-116029-58449-156n0jj/package.tgz","_from":"../d-116029-58449-156n0jj/package.tgz"}