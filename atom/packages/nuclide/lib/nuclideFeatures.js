var _require = require('event-kit');

/*
 * Copyright (c) 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the license found in the LICENSE file in
 * the root directory of this source tree.
 */

var Emitter = _require.Emitter;

var emitter = new Emitter();

module.exports = {
  dispose: function dispose() {
    if (emitter === null) {
      throw new Error('Nuclide features emitter has been disposed');
    }

    emitter.dispose();
    emitter = null;
  },

  didLoadInitialFeatures: function didLoadInitialFeatures() {
    if (emitter === null) {
      throw new Error('Nuclide features emitter has been disposed');
    }

    emitter.emit('did-load-initial-features');
  },

  didActivateInitialFeatures: function didActivateInitialFeatures() {
    if (emitter === null) {
      throw new Error('Nuclide features emitter has been disposed');
    }

    emitter.emit('did-activate-initial-features');
  },

  onDidLoadInitialFeatures: function onDidLoadInitialFeatures(callback) {
    if (emitter === null) {
      throw new Error('Nuclide features emitter has been disposed');
    }

    return emitter.on('did-load-initial-features', callback);
  },

  onDidActivateInitialFeatures: function onDidActivateInitialFeatures(callback) {
    if (emitter === null) {
      throw new Error('Nuclide features emitter has been disposed');
    }

    return emitter.on('did-activate-initial-features', callback);
  }
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm51Y2xpZGVGZWF0dXJlcy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiZUFha0IsT0FBTyxDQUFDLFdBQVcsQ0FBQzs7Ozs7Ozs7OztJQUEvQixPQUFPLFlBQVAsT0FBTzs7QUFFZCxJQUFJLE9BQU8sR0FBRyxJQUFJLE9BQU8sRUFBRSxDQUFDOztBQUU1QixNQUFNLENBQUMsT0FBTyxHQUFHO0FBQ2YsU0FBTyxFQUFBLG1CQUFTO0FBQ2QsUUFBSSxPQUFPLEtBQUssSUFBSSxFQUFFO0FBQ3BCLFlBQU0sSUFBSSxLQUFLLENBQUMsNENBQTRDLENBQUMsQ0FBQztLQUMvRDs7QUFFRCxXQUFPLENBQUMsT0FBTyxFQUFFLENBQUM7QUFDbEIsV0FBTyxHQUFHLElBQUksQ0FBQztHQUNoQjs7QUFFRCx3QkFBc0IsRUFBQSxrQ0FBUztBQUM3QixRQUFJLE9BQU8sS0FBSyxJQUFJLEVBQUU7QUFDcEIsWUFBTSxJQUFJLEtBQUssQ0FBQyw0Q0FBNEMsQ0FBQyxDQUFDO0tBQy9EOztBQUVELFdBQU8sQ0FBQyxJQUFJLENBQUMsMkJBQTJCLENBQUMsQ0FBQztHQUMzQzs7QUFFRCw0QkFBMEIsRUFBQSxzQ0FBUztBQUNqQyxRQUFJLE9BQU8sS0FBSyxJQUFJLEVBQUU7QUFDcEIsWUFBTSxJQUFJLEtBQUssQ0FBQyw0Q0FBNEMsQ0FBQyxDQUFDO0tBQy9EOztBQUVELFdBQU8sQ0FBQyxJQUFJLENBQUMsK0JBQStCLENBQUMsQ0FBQztHQUMvQzs7QUFFRCwwQkFBd0IsRUFBQSxrQ0FBQyxRQUFxQixFQUFjO0FBQzFELFFBQUksT0FBTyxLQUFLLElBQUksRUFBRTtBQUNwQixZQUFNLElBQUksS0FBSyxDQUFDLDRDQUE0QyxDQUFDLENBQUM7S0FDL0Q7O0FBRUQsV0FBTyxPQUFPLENBQUMsRUFBRSxDQUFDLDJCQUEyQixFQUFFLFFBQVEsQ0FBQyxDQUFDO0dBQzFEOztBQUVELDhCQUE0QixFQUFBLHNDQUFDLFFBQXFCLEVBQWM7QUFDOUQsUUFBSSxPQUFPLEtBQUssSUFBSSxFQUFFO0FBQ3BCLFlBQU0sSUFBSSxLQUFLLENBQUMsNENBQTRDLENBQUMsQ0FBQztLQUMvRDs7QUFFRCxXQUFPLE9BQU8sQ0FBQyxFQUFFLENBQUMsK0JBQStCLEVBQUUsUUFBUSxDQUFDLENBQUM7R0FDOUQ7Q0FDRixDQUFDIiwiZmlsZSI6Im51Y2xpZGVGZWF0dXJlcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2UgYmFiZWwnO1xuLyogQGZsb3cgKi9cblxuLypcbiAqIENvcHlyaWdodCAoYykgMjAxNS1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICogQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBsaWNlbnNlIGZvdW5kIGluIHRoZSBMSUNFTlNFIGZpbGUgaW5cbiAqIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbmltcG9ydCB0eXBlIHtEaXNwb3NhYmxlfSBmcm9tICdhdG9tJztcblxuY29uc3Qge0VtaXR0ZXJ9ID0gcmVxdWlyZSgnZXZlbnQta2l0Jyk7XG5cbmxldCBlbWl0dGVyID0gbmV3IEVtaXR0ZXIoKTtcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIGRpc3Bvc2UoKTogdm9pZCB7XG4gICAgaWYgKGVtaXR0ZXIgPT09IG51bGwpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignTnVjbGlkZSBmZWF0dXJlcyBlbWl0dGVyIGhhcyBiZWVuIGRpc3Bvc2VkJyk7XG4gICAgfVxuXG4gICAgZW1pdHRlci5kaXNwb3NlKCk7XG4gICAgZW1pdHRlciA9IG51bGw7XG4gIH0sXG5cbiAgZGlkTG9hZEluaXRpYWxGZWF0dXJlcygpOiB2b2lkIHtcbiAgICBpZiAoZW1pdHRlciA9PT0gbnVsbCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdOdWNsaWRlIGZlYXR1cmVzIGVtaXR0ZXIgaGFzIGJlZW4gZGlzcG9zZWQnKTtcbiAgICB9XG5cbiAgICBlbWl0dGVyLmVtaXQoJ2RpZC1sb2FkLWluaXRpYWwtZmVhdHVyZXMnKTtcbiAgfSxcblxuICBkaWRBY3RpdmF0ZUluaXRpYWxGZWF0dXJlcygpOiB2b2lkIHtcbiAgICBpZiAoZW1pdHRlciA9PT0gbnVsbCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdOdWNsaWRlIGZlYXR1cmVzIGVtaXR0ZXIgaGFzIGJlZW4gZGlzcG9zZWQnKTtcbiAgICB9XG5cbiAgICBlbWl0dGVyLmVtaXQoJ2RpZC1hY3RpdmF0ZS1pbml0aWFsLWZlYXR1cmVzJyk7XG4gIH0sXG5cbiAgb25EaWRMb2FkSW5pdGlhbEZlYXR1cmVzKGNhbGxiYWNrOiAoKSA9PiBtaXhlZCk6IERpc3Bvc2FibGUge1xuICAgIGlmIChlbWl0dGVyID09PSBudWxsKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ051Y2xpZGUgZmVhdHVyZXMgZW1pdHRlciBoYXMgYmVlbiBkaXNwb3NlZCcpO1xuICAgIH1cblxuICAgIHJldHVybiBlbWl0dGVyLm9uKCdkaWQtbG9hZC1pbml0aWFsLWZlYXR1cmVzJywgY2FsbGJhY2spO1xuICB9LFxuXG4gIG9uRGlkQWN0aXZhdGVJbml0aWFsRmVhdHVyZXMoY2FsbGJhY2s6ICgpID0+IG1peGVkKTogRGlzcG9zYWJsZSB7XG4gICAgaWYgKGVtaXR0ZXIgPT09IG51bGwpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignTnVjbGlkZSBmZWF0dXJlcyBlbWl0dGVyIGhhcyBiZWVuIGRpc3Bvc2VkJyk7XG4gICAgfVxuXG4gICAgcmV0dXJuIGVtaXR0ZXIub24oJ2RpZC1hY3RpdmF0ZS1pbml0aWFsLWZlYXR1cmVzJywgY2FsbGJhY2spO1xuICB9LFxufTtcbiJdfQ==